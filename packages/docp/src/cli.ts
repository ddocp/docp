#!/usr/bin/env node --no-warnings
import process from 'process'
import minimist from 'minimist'
import Service from './Service'
import { log } from './utils'
import path from 'path'

export default class CLI {

  run() {
    const args = this.parseArgs()
    const { command, help, version, _, ...options } = args
    if (['init', 'serve', 'build'].indexOf(command) > -1) {
      const service = new Service()
      const formattedOptions = this.formatUserInput(options)
      service[command](formattedOptions)
    } else if (version) {
      log.success(require('../package.json').version)
    } else {
      console.log('')
      log.success('docp version: ', require('../package.json').version)
      console.log('Usage: docp <command> [options]')
      console.log('')
      log.success('commands:')
      console.log('  init               Initialize docp project')
      console.log('  serve [options]    Preview website generated by docp')
      console.log('  build [options]    Generate your doc website')
      console.log('')
      log.success('options:')
      console.log('  --config           Specify configuration file. Default to ./docp.config.js')
      console.log('  --entry            Default to ./*.md')
      console.log('  --output           Default to ./dist')
      console.log('  --port             Specify local server port. default to 3000')
      console.log('')
      process.exit(0)
    }
  }

  private parseArgs() {
    const args = minimist(process.argv.slice(2), {
      boolean: ['version', 'help'],
    })
    const _ = args._
    return { ...args, _, command: _[0] }
  }

  private formatUserInput(args) {
    if (typeof args.config !== 'string') {
      args.config = 'docp.config.js'
    }
    args.config = path.resolve(process.cwd(), args.config)
    return args
  }
}

new CLI().run()
